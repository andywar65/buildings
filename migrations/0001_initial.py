# Generated by Django 3.1.2 on 2021-02-04 11:59

import buildings.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import filebrowser.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(editable=False, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, max_length=200, null=True, upload_to='uploads/buildings/images/', verbose_name='Immagine')),
                ('fb_image', filebrowser.fields.FileBrowseField(max_length=200, null=True, verbose_name='Immagine')),
                ('title', models.CharField(blank=True, help_text="Nome dell'edificio", max_length=50, null=True, verbose_name='Titolo')),
                ('intro', models.CharField(default=buildings.models.building_default_intro, help_text="Poche parole per descrivere l'edificio", max_length=100, verbose_name='Introduzione')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Data')),
                ('last_updated', models.DateTimeField(editable=False, null=True)),
                ('address', models.CharField(blank=True, help_text='Qualcosa tipo "Roma - Monteverde" va bene', max_length=100, null=True, verbose_name='Indirizzo')),
                ('lat', models.FloatField(default=41.8988, verbose_name='Latitudine')),
                ('long', models.FloatField(default=12.5451, help_text='Coordinate da Google Maps o https://openstreetmap.org', verbose_name='Longitudine')),
                ('zoom', models.FloatField(default=10, help_text='Maximum should be 23', verbose_name='Fattore di zoom')),
            ],
            options={
                'verbose_name': 'Edificio',
                'verbose_name_plural': 'Edifici',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='PhotoStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titolo della stazione fotografica', max_length=50, verbose_name='Titolo')),
                ('slug', models.SlugField(editable=False, max_length=100, null=True)),
                ('intro', models.CharField(default=buildings.models.photo_station_default_intro, max_length=100, verbose_name='Descrizione')),
                ('lat', models.FloatField(blank=True, null=True, verbose_name='Latitudine')),
                ('long', models.FloatField(blank=True, null=True, verbose_name='Longitudine')),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='building_station', to='buildings.building', verbose_name='Edificio')),
            ],
            options={
                'verbose_name': 'Stazione fotografica',
                'verbose_name_plural': 'Stazioni fotografiche',
                'ordering': ('build', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Nome della planimetria', max_length=50, verbose_name='Nome')),
                ('slug', models.SlugField(editable=False, max_length=100, null=True)),
                ('elev', models.FloatField(default=0, verbose_name='Elevazione in metri')),
                ('file', models.FileField(blank=True, max_length=200, null=True, upload_to='uploads/buildings/plans/dxf/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['dxf'])], verbose_name='File DXF')),
                ('refresh', models.BooleanField(default=True, verbose_name='Rinnova geometrie')),
                ('geometry', models.JSONField(blank=True, null=True)),
                ('visible', models.BooleanField(default=False, help_text='Check if plan is immediately visible', verbose_name='Visible')),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='building_plan', to='buildings.building', verbose_name='Edificio')),
            ],
            options={
                'verbose_name': 'Planimetria',
                'verbose_name_plural': 'Planimetrie',
                'ordering': ('-elev',),
            },
        ),
        migrations.CreateModel(
            name='StationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data:')),
                ('image', models.ImageField(blank=True, max_length=200, null=True, upload_to='uploads/buildings/images/', verbose_name='Immagine')),
                ('fb_image', filebrowser.fields.FileBrowseField(max_length=200, null=True, verbose_name='Immagine')),
                ('caption', models.CharField(blank=True, max_length=200, null=True, verbose_name='Didascalia')),
                ('stat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='station_image', to='buildings.photostation', verbose_name='Stazione')),
            ],
            options={
                'verbose_name': 'Immagine',
                'verbose_name_plural': 'Immagini',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='PlanSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(help_text='Set name', max_length=50, verbose_name='Titolo')),
                ('intro', models.CharField(blank=True, help_text='Few words to describe the set', max_length=100, null=True, verbose_name='Descrizione')),
                ('slug', models.SlugField(editable=False, max_length=100, null=True)),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='building_planset', to='buildings.building', verbose_name='Edificio')),
                ('parent', models.ForeignKey(blank=True, help_text='Can be changed only by staff in admin', null=True, on_delete=django.db.models.deletion.SET_NULL, to='buildings.planset', verbose_name='Parent set')),
                ('plans', models.ManyToManyField(blank=True, help_text='Show only plans belonging to chosen set', to='buildings.Plan', verbose_name='Plans')),
            ],
            options={
                'verbose_name': 'Plan set',
                'verbose_name_plural': 'Plan sets',
            },
        ),
        migrations.AddField(
            model_name='photostation',
            name='plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plan_station', to='buildings.plan', verbose_name='Planimetria'),
        ),
    ]
